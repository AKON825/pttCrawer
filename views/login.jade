extends layout

block content
  .loginDiv.col-xs-3.social-buttons.col-sm-offset-5.col-xs-offset-2
    a.btn-lg.btn-lg.btn-social.btn-facebook
      i.fa.fa-facebook
      |  使用Facebook登入
    // 之後用css把他置中
  .col-xs-12
    #status

block css
  style.
    header {
      min-height: 600px;
    }

    .loginDiv {
      margin-top: 140px;
    }

block script
  script(type='text/javascript').
    $('.btn-facebook').click(function () {
      FB.login(
        function (response) {
          statusChangeCallback(response)
        },
        {
          scope: 'public_profile,email',
          auth_type: 'rerequest'
        }
      );
    })

    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
      // The response object is returned with a status field that lets the
      // app know the current login status of the person.
      // Full docs on the response object can be found in the documentation
      // for FB.getLoginStatus().
      if (response.status === 'connected') {
        // Logged into your app and Facebook.
        return callFbAPI();
      } else if (response.status === 'not_authorized') {
        // The person is logged into Facebook, but not your app.
        notifySuccess(JSON.stringify('Please log ' + 'into this app.'));
      } else {
        // The person is not logged into Facebook, so we're not sure if
        // they are logged into this app or not.
        notifySuccess(JSON.stringify('Please log ' + 'into Facebook.'));
      }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
      FB.getLoginStatus(function (response) {
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function () {
      FB.init({
        appId: '997857923594603',
        cookie: true,  // enable cookies to allow the server to access
        // the session
        xfbml: true,  // parse social plugins on this page
        version: 'v2.5' // use graph api version 2.5
      });
      // Now that we've initialized the JavaScript SDK, we call
      // FB.getLoginStatus().  This function gets the state of the
      // person visiting this page and can return one of three states to
      // the callback you provide.  They can be:
      //
      // 1. Logged into your app ('connected')
      // 2. Logged into Facebook, but not your app ('not_authorized')
      // 3. Not logged into Facebook and can't tell if they are logged into
      //    your app or not.
      //
      // These three cases are handled in the callback function.
      FB.getLoginStatus(function (response) {
        statusChangeCallback(response);
      });
    };

    // Load the SDK asynchronously
    (function (d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s);
      js.id = id;
      js.src = "//connect.facebook.net/zh_TW/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function callFbAPI() {
      FB.api('/me', function (response) {
        var responseObj = {}
        responseObj.name = response.name
        responseObj.id = response.id

        FB.api('/' + response.id + '/picture', function (response) {
          responseObj.photoUrl = response.data.url

          return signInChatroom(responseObj)
        });
      });
    }
    //Below we include the Login Button social plugin. This button uses
    //the JavaScript SDK to present a graphical Login button that triggers
    //the FB.login() function when clicked.

    function signInChatroom(responseObj){
      $.ajax({
        url: '/api/fb_login_complete',
        type: 'PUT',
        data: {username: responseObj.name, fbId: responseObj.id, photoUrl: responseObj.photoUrl}
      })
      .done(function (data) {
        if (data.result === 'error') {
          notifyAlert(JSON.stringify(data.msg));
          return
        }
        if (data.result !== 'ok') {
          notifyAlert(JSON.stringify('登入失敗'));
          return
        }

        return location.assign('/');
      })
      .fail(function (data) {
        notifyAlert(JSON.stringify(data));
      })
    }

    $(function () {
      // 避免跳頁
      $('form').submit(function (e) {
        e.preventDefault();
      })
    })

